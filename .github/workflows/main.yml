# name: CI/CD Pipeline
# # on:
# #   push:
# #     branches:
# #       - main
# #   pull_request:
# #     branches:
# #       - main

# # jobs:
# #   build:
# #     runs-on: ubuntu-latest

# #     steps:
# #       - name: Checkout code
# #         uses: actions/checkout@v3

# #       - name: Set up PHP
# #         uses: shivammathur/setup-php@v2
# #         with:
# #           php-version: 8.2

# #       - name: Install dependencies
# #         run: composer install --prefer-dist --no-progress --no-suggest

# #       - name: Copy .env example
# #         run: cp .env.example .env

# #       - name: Generate app key
# #         run: php artisan key:generate

# #       - name: Run migrations
# #         run: php artisan migrate --force

# #       - name: Cache Composer dependencies
# #         uses: actions/cache@v2
# #         with:
# #           path: vendor
# #           key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
# #           restore-keys: ${{ runner.os }}-composer-

# #       - name: Cache node modules
# #         uses: actions/cache@v2
# #         with:
# #           path: node_modules
# #           key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
# #           restore-keys: ${{ runner.os }}-node-

# #       - name: Install Node.js
# #         uses: actions/setup-node@v2
# #         with:
# #           node-version: "14"

# #       - name: Install NPM dependencies
# #         run: npm install

# #       - name: Run NPM build
# #         run: npm run dev
# # name: Laravel Deployment (Username/Password)

# # on:
# #   push:
# #     branches: [main]

# # jobs:
# #   deploy:
# #     runs-on: ubuntu-latest
# #     steps:
# #       - uses: actions/checkout@v3

# #       - name: Copy Username and Password
# #         env:
# #           GCE_USERNAME: ${{ secrets.GCE_USERNAME }}
# #           GCE_PASSWORD: ${{ secrets.GCE_PASSWORD }}
# #         run: |
# #           echo "export GCE_USERNAME=$GCE_USERNAME" >> $GITHUB_ENV
# #           echo "export GCE_PASSWORD=$GCE_PASSWORD" >> $GITHUB_ENV

# #       - name: Copy Codebase to Server
# #         run: |
# #           scp -o StrictHostKeyChecking=no -r ./ $GCE_USERNAME@$GCE_HOST:/var/www/html/

# #       - name: Install Composer Dependencies
# #         uses: shivmahajan/composer-install@v1
# #         with:
# #           composer-version: "2"

# #       - name: Run Artisan Commands
# #         run: |
# #           sshpass -h $GCE_HOST ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no $GCE_USERNAME "cd /var/www/html && php artisan migrate:fresh --force && php artisan cache:clear && php artisan config:cache"

# # env:
# #   GCE_HOST: 34.122.150.61 # Replace with your public IP
# # name: Deploy Laravel Application

# # on:
# #   push:
# #     branches:
# #       - main

# # jobs:
# #   deploy:
# #     runs-on: ubuntu-latest

# #     env:
# #       GCE_SERVER_IP: ${{ secrets.GCE_SERVER_IP }}

# #     steps:
# #       - name: Checkout Code
# #         uses: actions/checkout@v3

# #       - name: Set up PHP
# #         uses: shivammathur/setup-php@v2
# #         with:
# #           php-version: "8.2"

# #       - name: Create Default .env File
# #         run: |
# #           cp .env.example .env

# #       - name: Install Dependencies
# #         run: composer install --no-interaction --prefer-dist --optimize-autoloader

# #       - name: Generate Application Key
# #         run: php artisan key:generate

# #       # - name: Prepare Deployment Package
# #       #   run: |
# #       #     php artisan config:cache
# #       #     php artisan route:cache
# #       #     php artisan view:cache

# #       - name: Copy Files to Server
# #         env:
# #           GCE_USERNAME: ${{ secrets.GCE_USERNAME }}
# #           GCE_PASSWORD: ${{ secrets.GCE_PASSWORD }}
# #         run: |
# #           sshpass -p ${{ secrets.GCE_PASSWORD }} ssh -o StrictHostKeyChecking=no ${{ secrets.GCE_USERNAME }}@${{ env.GCE_SERVER_IP }} "rm -rf /var/www/html/dabo_bet/*"
# #           rsync -avz --delete --exclude=".env" --exclude="storage/" --exclude="vendor/" ./ ${{ secrets.GCE_USERNAME }}@${{ env.GCE_SERVER_IP }}:/var/www/html/dabo_bet

# #       - name: Set Environment Variables
# #         env:
# #           APP_ENV: "production"
# #           APP_KEY: ${{ secrets.APP_KEY }}
# #           DB_HOST: ${{ secrets.DB_HOST }}
# #           DB_DATABASE: ${{ secrets.DB_DATABASE }}
# #           DB_USERNAME: ${{ secrets.DB_USERNAME }}
# #           DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
# #           GCE_USERNAME: ${{ secrets.GCE_USERNAME }}
# #           GCE_PASSWORD: ${{ secrets.GCE_PASSWORD }}
# #         run: |
# #           sshpass -p ${{ secrets.GCE_PASSWORD }} ssh -o StrictHostKeyChecking=no ${{ secrets.GCE_USERNAME }}@${{ env.GCE_SERVER_IP }} "echo 'APP_ENV=${{ env.APP_ENV }}' > /var/www/html/dabo_bet/.env"
# #           sshpass -p ${{ secrets.GCE_PASSWORD }} ssh -o StrictHostKeyChecking=no ${{ secrets.GCE_USERNAME }}@${{ env.GCE_SERVER_IP }} "echo 'APP_KEY=${{ env.APP_KEY }}' >> /var/www/html/dabo_bet/.env"
# #           sshpass -p ${{ secrets.GCE_PASSWORD }} ssh -o StrictHostKeyChecking=no ${{ secrets.GCE_USERNAME }}@${{ env.GCE_SERVER_IP }} "echo 'DB_HOST=${{ env.DB_HOST }}' >> /var/www/html/dabo_bet/.env"
# #           sshpass -p ${{ secrets.GCE_PASSWORD }} ssh -o StrictHostKeyChecking=no ${{ secrets.GCE_USERNAME }}@${{ env.GCE_SERVER_IP }} "echo 'DB_DATABASE=${{ env.DB_DATABASE }}' >> /var/www/html/dabo_bet/.env"
# #           sshpass -p ${{ secrets.GCE_PASSWORD }} ssh -o StrictHostKeyChecking=no ${{ secrets.GCE_USERNAME }}@${{ env.GCE_SERVER_IP }} "echo 'DB_USERNAME=${{ env.DB_USERNAME }}' >> /var/www/html/dabo_bet/.env"
# #           sshpass -p ${{ secrets.GCE_PASSWORD }} ssh -o StrictHostKeyChecking=no ${{ secrets.GCE_USERNAME }}@${{ env.GCE_SERVER_IP }} "echo 'DB_PASSWORD=${{ env.DB_PASSWORD }}' >> /var/www/html/dabo_bet/.env"

# #       - name: Run Migrations
# #         env:
# #           GCE_USERNAME: ${{ secrets.GCE_USERNAME }}
# #           GCE_PASSWORD: ${{ secrets.GCE_PASSWORD }}
# #         run: |
# #           sshpass -p ${{ secrets.GCE_PASSWORD }} ssh -o StrictHostKeyChecking=no ${{ secrets.GCE_USERNAME }}@${{ env.GCE_SERVER_IP }} "cd /var/www/html/dabo_bet && php artisan migrate --force"

# name: Deploy Laravel Application

# on:
#   push:
#     branches:
#       - main

# jobs:
#   deploy:
#     runs-on: ubuntu-latest

#     env:
#       GCE_SERVER_IP: ${{ secrets.GCE_SERVER_IP }}

#     steps:
#       - name: Checkout Code
#         uses: actions/checkout@v3

#       - name: Set up PHP
#         uses: shivammathur/setup-php@v2
#         with:
#           php-version: "8.2"

#       - name: Create Default .env File
#         run: |
#           cp .env.example .env

#       - name: Install Dependencies
#         run: composer install --no-interaction --prefer-dist --optimize-autoloader

#       - name: Generate Application Key
#         run: php artisan key:generate

#       - name: Add SSH Key
#         uses: webfactory/ssh-agent@v0.5.4
#         with:
#           ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

#       - name: Copy Files to Server
#         env:
#           GCE_USERNAME: ${{ secrets.GCE_USERNAME }}
#         run: |
#           ssh -o StrictHostKeyChecking=no ${{ secrets.GCE_USERNAME }}@${{ env.GCE_SERVER_IP }} "rm -rf /var/www/html/dabo_bet/*"
#           rsync -avz --delete --exclude=".env" --exclude="storage/" --exclude="vendor/" ./ ${{ secrets.GCE_USERNAME }}@${{ env.GCE_SERVER_IP }}:/var/www/html/dabo_bet

#       - name: Set Environment Variables
#         env:
#           APP_ENV: "production"
#           APP_KEY: ${{ secrets.APP_KEY }}
#           DB_HOST: ${{ secrets.DB_HOST }}
#           DB_DATABASE: ${{ secrets.DB_DATABASE }}
#           DB_USERNAME: ${{ secrets.DB_USERNAME }}
#           DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
#         run: |
#           ssh -o StrictHostKeyChecking=no ${{ secrets.GCE_USERNAME }}@${{ env.GCE_SERVER_IP }} "echo 'APP_ENV=${{ env.APP_ENV }}' > /var/www/html/dabo_bet/.env"
#           ssh -o StrictHostKeyChecking=no ${{ secrets.GCE_USERNAME }}@${{ env.GCE_SERVER_IP }} "echo 'APP_KEY=${{ env.APP_KEY }}' >> /var/www/html/dabo_bet/.env"
#           ssh -o StrictHostKeyChecking=no ${{ secrets.GCE_USERNAME }}@${{ env.GCE_SERVER_IP }} "echo 'DB_HOST=${{ env.DB_HOST }}' >> /var/www/html/dabo_bet/.env"
#           ssh -o StrictHostKeyChecking=no ${{ secrets.GCE_USERNAME }}@${{ env.GCE_SERVER_IP }} "echo 'DB_DATABASE=${{ env.DB_DATABASE }}' >> /var/www/html/dabo_bet/.env"
#           ssh -o StrictHostKeyChecking=no ${{ secrets.GCE_USERNAME }}@${{ env.GCE_SERVER_IP }} "echo 'DB_USERNAME=${{ env.DB_USERNAME }}' >> /var/www/html/dabo_bet/.env"
#           ssh -o StrictHostKeyChecking=no ${{ secrets.GCE_USERNAME }}@${{ env.GCE_SERVER_IP }} "echo 'DB_PASSWORD=${{ env.DB_PASSWORD }}' >> /var/www/html/dabo_bet/.env"

#       - name: Run Migrations
#         run: |
#           ssh -o StrictHostKeyChecking=no ${{ secrets.GCE_USERNAME }}@${{ env.GCE_SERVER_IP }} "cd /var/www/html/dabo_bet && php artisan migrate --force"
